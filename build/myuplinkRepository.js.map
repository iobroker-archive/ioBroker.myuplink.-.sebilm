{
  "version": 3,
  "sources": ["../src/myuplinkRepository.ts"],
  "sourcesContent": ["import axios, { AxiosError } from 'axios';\nimport { AlarmsPaged } from './models/AlarmsPaged';\nimport { PagedSystemResult } from './models/PagedSystemResult';\nimport { ParameterData } from './models/ParameterData';\n\nfunction setProperty<K extends keyof any>(obj: any, propertyName: K, value: any): void {\n    obj[propertyName] = value;\n}\n\nexport default interface MyUplinkOptions {\n    baseUrl: string;\n    timeout: number;\n    userAgent: string;\n    language: string;\n}\n\nexport class MyUplinkRepository {\n    constructor(options: MyUplinkOptions, log: ioBroker.Log) {\n        this.log = log;\n        this.options = options;\n\n        axios.defaults.baseURL = options.baseUrl;\n        axios.defaults.headers.common['user-agent'] = options.userAgent;\n        axios.defaults.timeout = options.timeout;\n    }\n\n    private log: ioBroker.Log;\n    private options: MyUplinkOptions;\n\n    getSystemsAndDevicesAsync(accessToken: string): Promise<PagedSystemResult> {\n        return this.getFromMyUplinkAsync<PagedSystemResult>('/v2/systems/me', accessToken);\n    }\n\n    async getDevicePointsAsync(deviceId: string, accessToken: string, parameters: string | undefined = undefined): Promise<ParameterData[]> {\n        let url = `/v3/devices/${deviceId}/points`;\n        if (parameters) {\n            url = `${url}&parameters=${parameters}`;\n        }\n        return await this.getFromMyUplinkAsync<ParameterData[]>(url, accessToken);\n    }\n\n    async setDevicePointAsync(deviceId: string, accessToken: string, parameterId: string, value: string): Promise<void> {\n        const body = {};\n        setProperty(body, parameterId, value);\n        await this.setDevicePointsAsync(deviceId, accessToken, body);\n    }\n\n    async setDevicePointsAsync(deviceId: string, accessToken: string, keyValueDictionary: Record<string, string>): Promise<void> {\n        await this.patchToMyUplinkAsync(`/v2/devices/${deviceId}/points`, keyValueDictionary, accessToken);\n    }\n\n    getActiveNotificationsAsync(systemId: string, accessToken: string): Promise<AlarmsPaged> {\n        return this.getFromMyUplinkAsync<AlarmsPaged>(`/v2/systems/${systemId}/notifications/active?itemsPerPage=100`, accessToken);\n    }\n\n    private async getFromMyUplinkAsync<T>(url: string, accessToken: string): Promise<T> {\n        const lang = this.options.language;\n        this.log.debug(`GET ${url} (lang: ${lang})`);\n        try {\n            const { data } = await axios.get<T>(url, {\n                headers: {\n                    Authorization: `Bearer ${accessToken}`,\n                    'Accept-Language': lang,\n                },\n            });\n            this.log.silly(JSON.stringify(data, null, ' '));\n            return data;\n        } catch (error) {\n            throw this.checkError(url, error);\n        }\n    }\n\n    private async patchToMyUplinkAsync(url: string, body: any, accessToken: string): Promise<void> {\n        const lang = this.options.language;\n        this.log.debug(`PATCH ${url} (lang: ${lang})`);\n        this.log.silly(`PATCH body: ${JSON.stringify(body, null, ' ')}`);\n        try {\n            const { data } = await axios.patch(url, body, {\n                headers: {\n                    Authorization: `Bearer ${accessToken}`,\n                    'Accept-Language': lang,\n                },\n            });\n            this.log.debug(JSON.stringify(data, null, ' '));\n        } catch (error) {\n            throw this.checkError(url, error);\n        }\n    }\n\n    private checkError(suburl: string, error: unknown): unknown {\n        this.log.error(`error from ${suburl}`);\n        this.log.error(JSON.stringify(error, null, ' '));\n        if (axios.isAxiosError(error)) {\n            const axiosError = error as AxiosError;\n            if (axiosError.response != null) {\n                if (axiosError.response.data != null) {\n                    const responseText = JSON.stringify(axiosError.response.data, null, ' ');\n                    const errorMessage = `${axiosError.response.statusText}: ${responseText}`;\n                    return new Error(errorMessage);\n                } else {\n                    return new Error(axiosError.response.statusText);\n                }\n            }\n        }\n        return error;\n    }\n}\n"],
  "mappings": "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",
  "names": ["axios"]
}
