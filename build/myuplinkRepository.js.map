{
  "version": 3,
  "sources": ["../src/myUplinkRepository.ts"],
  "sourcesContent": ["import axios, { AxiosError } from 'axios';\r\nimport { AlarmsPaged } from './models/AlarmsPaged';\r\nimport { PagedSystemResult } from './models/PagedSystemResult';\r\nimport { ParameterData } from './models/ParameterData';\r\nimport { Logger } from './types';\r\n\r\nfunction setProperty<K extends keyof any>(obj: any, propertyName: K, value: any): void {\r\n    obj[propertyName] = value;\r\n}\r\n\r\nexport interface MyUplinkOptions {\r\n    baseUrl: string;\r\n    timeout: number;\r\n    userAgent: string;\r\n    language: string;\r\n}\r\n\r\nexport class MyUplinkRepository {\r\n    constructor(options: MyUplinkOptions, log: Logger) {\r\n        this.log = log;\r\n        this.options = options;\r\n\r\n        axios.defaults.baseURL = options.baseUrl;\r\n        axios.defaults.headers.common['user-agent'] = options.userAgent;\r\n        axios.defaults.timeout = options.timeout;\r\n    }\r\n\r\n    private log: Logger;\r\n    private options: MyUplinkOptions;\r\n\r\n    getSystemsAndDevicesAsync(accessToken: string): Promise<PagedSystemResult> {\r\n        return this.getFromMyUplinkAsync<PagedSystemResult>('/v2/systems/me', accessToken);\r\n    }\r\n\r\n    getDevicePointsAsync(deviceId: string, accessToken: string): Promise<ParameterData[]> {\r\n        return this.getFromMyUplinkAsync<ParameterData[]>(`/v3/devices/${deviceId}/points`, accessToken);\r\n    }\r\n\r\n    setDevicePointAsync(deviceId: string, accessToken: string, parameterId: string, value: string): Promise<any> {\r\n        const body = {};\r\n        setProperty(body, parameterId, value);\r\n        return this.setDevicePointsAsync(deviceId, accessToken, body);\r\n    }\r\n\r\n    setDevicePointsAsync(deviceId: string, accessToken: string, keyValueDictionary: Record<string, string>): Promise<any> {\r\n        return this.patchToMyUplinkAsync<any>(`/v2/devices/${deviceId}/points`, keyValueDictionary, accessToken);\r\n    }\r\n\r\n    getActiveNotificationsAsync(systemId: string, accessToken: string): Promise<AlarmsPaged> {\r\n        return this.getFromMyUplinkAsync<AlarmsPaged>(`/v2/systems/${systemId}/notifications/active?itemsPerPage=100`, accessToken);\r\n    }\r\n\r\n    private async getFromMyUplinkAsync<T>(url: string, accessToken: string): Promise<T> {\r\n        const lang = this.options.language;\r\n        this.log.debug(`GET ${url} (lang: ${lang})`);\r\n        try {\r\n            const { data } = await axios.get<T>(url, {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                    'Accept-Language': lang,\r\n                },\r\n            });\r\n            this.log.silly(`Response from GET ${url} (lang: ${lang}): ${JSON.stringify(data, null, ' ')}`);\r\n            return data;\r\n        } catch (error) {\r\n            throw this.checkError(url, error);\r\n        }\r\n    }\r\n\r\n    private async patchToMyUplinkAsync<T>(url: string, body: any, accessToken: string): Promise<T> {\r\n        const lang = this.options.language;\r\n        this.log.debug(`PATCH ${url} (lang: ${lang})`);\r\n        this.log.silly(`PATCH body: ${JSON.stringify(body, null, ' ')}`);\r\n        try {\r\n            const { data } = await axios.patch<T>(url, body, {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                    'Accept-Language': lang,\r\n                },\r\n            });\r\n            this.log.debug(`Response from PATCH ${url} (lang: ${lang}): ${JSON.stringify(data, null, ' ')}`);\r\n            return data;\r\n        } catch (error) {\r\n            throw this.checkError(url, error);\r\n        }\r\n    }\r\n\r\n    private checkError(suburl: string, error: unknown): unknown {\r\n        this.log.error(`error from ${suburl}`);\r\n        this.log.error(JSON.stringify(error, null, ' '));\r\n        if (axios.isAxiosError(error)) {\r\n            const axiosError = error as AxiosError;\r\n            if (axiosError.response != null) {\r\n                if (axiosError.response.data != null) {\r\n                    const responseText = JSON.stringify(axiosError.response.data, null, ' ');\r\n                    const errorMessage = `${axiosError.response.statusText}: ${responseText}`;\r\n                    return new Error(errorMessage);\r\n                } else {\r\n                    return new Error(axiosError.response.statusText);\r\n                }\r\n            }\r\n        }\r\n        return error;\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": ["axios"]
}
