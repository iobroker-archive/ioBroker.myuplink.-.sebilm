{
  "version": 3,
  "sources": ["../../src/models/V2DevicesDeviceIdSmartHomeCategoriesGet200Response.ts"],
  "sourcesContent": ["/**\n * myUplink Public API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * OpenAPI spec version: v2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * Class representing the response for Smart Home Categories.\n */\nexport class V2DevicesDeviceIdSmartHomeCategoriesGet200Response {\n    'shEnergyMetered'?: boolean;\n    'shHwBoost'?: boolean;\n    'shHwTemp'?: boolean;\n    'shIndoorCO2'?: boolean;\n    'shIndoorHumidity'?: boolean;\n    'shIndoorSpHeat'?: boolean;\n    'shIndoorSpCool'?: boolean;\n    'shIndoorSpOffsHeat'?: boolean;\n    'shIndoorSpOffsCool'?: boolean;\n    'shIndoorTemp'?: boolean;\n    'shOutdoorTemp'?: boolean;\n    'shPoolTemp'?: boolean;\n    'shReturnTemp'?: boolean;\n    'shSmartMode'?: boolean;\n    'shSolarEnergyProducedDay'?: boolean;\n    'shSolarEnergyProducedWeek'?: boolean;\n    'shSolarEnergyProducedMonth'?: boolean;\n    'shSolarEnergyProducedYear'?: boolean;\n    'shSolarEnergyProducedTotal'?: boolean;\n    'shSupplyTemp'?: boolean;\n    'shVentBoost'?: boolean;\n    'shVentMode'?: boolean;\n    'shZones'?: boolean;\n    'shZoneMode'?: boolean;\n    'shElectricPowerUsedCurrently'?: boolean;\n    'shHwMode'?: boolean;\n    'shIndoorCO2Sp'?: boolean;\n    'shIndoorHumiditySp'?: boolean;\n    'shPoolSp'?: boolean;\n    'shSolarPowerAvailableCurrently'?: boolean;\n    'shElectricalPriceMode'?: boolean;\n    'shElectricalPriceModeDuration'?: boolean;\n    'shIndoorHumidityMode'?: boolean;\n    'shIndoorDeHumiditySp'?: boolean;\n    'shFanMode'?: boolean;\n    'shFanStatus'?: boolean;\n    'shEnergyStateOfCharge'?: boolean;\n    'shEnergyMeteredDay'?: boolean;\n    'shEnergyMeteredMonth'?: boolean;\n    'shEnergyMeteredYear'?: boolean;\n    'shElectricalPriceNextLow'?: boolean;\n    'shElectricalPriceNextHigh'?: boolean;\n    'shHeatMode'?: boolean;\n    'shHeatBoost'?: boolean;\n\n    static readonly discriminator: string | undefined = undefined;\n\n    static readonly attributeTypeMap: Array<{ name: string; baseName: string; type: string; format: string }> = [\n        {\n            name: 'shEnergyMetered',\n            baseName: 'sh-energyMetered',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shHwBoost',\n            baseName: 'sh-hwBoost',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shHwTemp',\n            baseName: 'sh-hwTemp',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shIndoorCO2',\n            baseName: 'sh-indoorCO2',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shIndoorHumidity',\n            baseName: 'sh-indoorHumidity',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shIndoorSpHeat',\n            baseName: 'sh-indoorSpHeat',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shIndoorSpCool',\n            baseName: 'sh-indoorSpCool',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shIndoorSpOffsHeat',\n            baseName: 'sh-indoorSpOffsHeat',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shIndoorSpOffsCool',\n            baseName: 'sh-indoorSpOffsCool',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shIndoorTemp',\n            baseName: 'sh-indoorTemp',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shOutdoorTemp',\n            baseName: 'sh-outdoorTemp',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shPoolTemp',\n            baseName: 'sh-poolTemp',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shReturnTemp',\n            baseName: 'sh-returnTemp',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shSmartMode',\n            baseName: 'sh-smartMode',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shSolarEnergyProducedDay',\n            baseName: 'sh-solarEnergyProducedDay',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shSolarEnergyProducedWeek',\n            baseName: 'sh-solarEnergyProducedWeek',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shSolarEnergyProducedMonth',\n            baseName: 'sh-solarEnergyProducedMonth',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shSolarEnergyProducedYear',\n            baseName: 'sh-solarEnergyProducedYear',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shSolarEnergyProducedTotal',\n            baseName: 'sh-solarEnergyProducedTotal',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shSupplyTemp',\n            baseName: 'sh-supplyTemp',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shVentBoost',\n            baseName: 'sh-ventBoost',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shVentMode',\n            baseName: 'sh-ventMode',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shZones',\n            baseName: 'sh-zones',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shZoneMode',\n            baseName: 'sh-zoneMode',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shElectricPowerUsedCurrently',\n            baseName: 'sh-electricPowerUsedCurrently',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shHwMode',\n            baseName: 'sh-hwMode',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shIndoorCO2Sp',\n            baseName: 'sh-indoorCO2Sp',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shIndoorHumiditySp',\n            baseName: 'sh-indoorHumiditySp',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shPoolSp',\n            baseName: 'sh-poolSp',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shSolarPowerAvailableCurrently',\n            baseName: 'sh-solarPowerAvailableCurrently',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shElectricalPriceMode',\n            baseName: 'sh-electricalPriceMode',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shElectricalPriceModeDuration',\n            baseName: 'sh-electricalPriceModeDuration',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shIndoorHumidityMode',\n            baseName: 'sh-indoorHumidityMode',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shIndoorDeHumiditySp',\n            baseName: 'sh-indoorDeHumiditySp',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shFanMode',\n            baseName: 'sh-fanMode',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shFanStatus',\n            baseName: 'sh-fanStatus',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shEnergyStateOfCharge',\n            baseName: 'sh-energyStateOfCharge',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shEnergyMeteredDay',\n            baseName: 'sh-energyMeteredDay',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shEnergyMeteredMonth',\n            baseName: 'sh-energyMeteredMonth',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shEnergyMeteredYear',\n            baseName: 'sh-energyMeteredYear',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shElectricalPriceNextLow',\n            baseName: 'sh-electricalPriceNextLow',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shElectricalPriceNextHigh',\n            baseName: 'sh-electricalPriceNextHigh',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shHeatMode',\n            baseName: 'sh-heatMode',\n            type: 'boolean',\n            format: '',\n        },\n        {\n            name: 'shHeatBoost',\n            baseName: 'sh-heatBoost',\n            type: 'boolean',\n            format: '',\n        },\n    ];\n\n    /**\n     * Returns the attribute type map for the response.\n     */\n    static getAttributeTypeMap(): Array<{ name: string; baseName: string; type: string; format: string }> {\n        return V2DevicesDeviceIdSmartHomeCategoriesGet200Response.attributeTypeMap;\n    }\n\n    /**\n     * Constructs a new instance of the V2DevicesDeviceIdSmartHomeCategoriesGet200Response class.\n     */\n    public constructor() {}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAeO,MAAM,sDAAN,MAAM,oDAAmD;AAAA;AAAA;AAAA;AAAA,EA8T5D,OAAO,sBAA+F;AAClG,WAAO,oDAAmD;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA,EAKO,cAAc;AAAA,EAAC;AAC1B;AAtUa,oDA8CO,gBAAoC;AA9C3C,oDAgDO,mBAA4F;AAAA,EACxzTG,IAAM,qDAAN;",
  "names": []
}
